{
  "compilerOptions": {
    /* Basic Options */
    "target": "ES2022",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ES2022' */
    "module": "ES2022",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "lib": [                                  /* Specify library files to be included in the compilation. */
      "ES2022",
      "dom",
      "dom.iterable"
    ],
    "outDir": "./dist",                       /* Redirect output structure to the directory. */
    "rootDir": "./src",                       /* Specify the root directory of input files. */
    "sourceMap": true,                        /* Generates corresponding '.map' file. */
    "declaration": false,                     /* Generates corresponding '.d.ts' file. */
    "removeComments": false,                  /* Do not emit comments to output. */
    
    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                 /* Enable strict null checks. */
    "strictFunctionTypes": true,              /* Enable strict checking of function types. */
    "strictBindCallApply": true,              /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "strictPropertyInitialization": true,     /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true,                     /* Parse in strict mode and emit "use strict" for each source file. */
    
    /* Additional Checks */
    "noUnusedLocals": true,                   /* Report errors on unused locals. */
    "noUnusedParameters": true,               /* Report errors on unused parameters. */
    "noImplicitReturns": true,                /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,       /* Report errors for fallthrough cases in switch statement. */
    "noImplicitOverride": true,               /* Ensure overriding members are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true, /* Require the use of index signatures for indexed access. */
    
    /* Module Resolution Options */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' */
    "baseUrl": "./src",                       /* Base directory to resolve non-relative module names. */
    "paths": {                                /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      "@app/*": ["app/*"],
      "@environments/*": ["environments/*"],
      "@shared/*": ["app/shared/*"]
    },
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules. */
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
    
    /* Experimental Options */
    "experimentalDecorators": true,           /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,            /* Enables experimental support for emitting type metadata for decorators. */
    
    /* Advanced Options */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "typeRoots": [                            /* List of folders to include type definitions from. */
      "node_modules/@types"
    ],
    "downlevelIteration": true,               /* Provide full support for iterables in 'for-of', spread, and destructuring. */
    "importHelpers": true,                    /* Import emit helpers from 'tslib'. */
    "useDefineForClassFields": false          /* Use defineProperty for class fields instead of assignment expressions. */
  },
  "angularCompilerOptions": {
    "enableI18nLegacyMessageIdFormat": false, /* Disable legacy message format for i18n. */
    "strictInjectionParameters": true,        /* Ensures type safety for dependency injection. */
    "strictInputAccessModifiers": true,       /* Ensures private fields aren't accessed in templates. */
    "strictTemplates": true,                  /* Enables strict type checking in templates. */
    "fullTemplateTypeCheck": true,            /* Enable full template type checking. */
    "preserveWhitespaces": false,             /* Remove whitespace to reduce bundle size. */
    "allowEmptyCodegenFiles": false           /* Don't generate empty files during codegen. */
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.d.ts"
  ],
  "exclude": [
    "node_modules",
    "**/*.spec.ts",
    "dist"
  ],
  "compileOnSave": false
}